// Generated by CoffeeScript 1.3.1

$(function() {
  var Fude, FudeCursor;
  FudeCursor = (function() {

    FudeCursor.name = 'FudeCursor';

    function FudeCursor(size, icon) {
      this.size = size;
      this.icon = icon;
      this.x = 0;
      this.y = 0;
      this.css = {
        "display": "none",
        "background-color": "#000",
        "position": "absolute",
        "width": "" + this.size + "px",
        "height": "" + this.size + "px",
        "border-radius": "" + this.size + "px",
        "-webkit-border-radius": "" + this.size + "px",
        "-moz-border-radius": "" + this.size + "px",
        "cursor": "url(" + this.icon + "), pointer"
      };
      this.is_visible = false;
      this.target = $("<div />").css(this.css);
    }

    FudeCursor.prototype.show = function() {
      this.is_visible = true;
      return this.target.css({
        display: "block"
      });
    };

    FudeCursor.prototype.hide = function() {
      this.is_visible = false;
      return this.target.css({
        display: "none"
      });
    };

    FudeCursor.prototype.update = function(x, y) {
      this.x = x;
      this.y = y;
      return this.move(x, y);
    };

    FudeCursor.prototype.move = function(x, y) {
      return this.target.css({
        top: y - (this.size / 2),
        left: x - (this.size / 2)
      });
    };

    FudeCursor.prototype.hit = function(element) {};

    FudeCursor.prototype.equal = function(element) {
      return this.target.get(0) === $(element).get(0);
    };

    return FudeCursor;

  })();
  Fude = (function() {

    Fude.name = 'Fude';

    function Fude(target, option) {
      this.target = target;
      this.page_x = 0;
      this.page_y = 0;
      this.size = 30;
      this.icon = "pointer.gif";
      this.cursor = new FudeCursor(this.size, this.icon);
      this.set_task();
      this.set_event();
      this.set_cursor();
    }

    Fude.prototype.set_event = function() {
      var that;
      that = this;
      return $("html").mousemove(function(e) {
        that.page_x = e.pageX;
        return that.page_y = e.pageY;
      });
    };

    Fude.prototype.set_task = function() {
      var task, that;
      that = this;
      task = function() {
        return that.update();
      };
      return setInterval(task, 30);
    };

    Fude.prototype.set_cursor = function() {
      return this.target.append(this.cursor.target);
    };

    Fude.prototype.update = function() {
      var that;
      that = this;
      if (this.is_out() && this.cursor.is_visible) {
        this.cursor.hide();
      }
      if (!this.is_out() && !this.cursor.is_visible) {
        this.cursor.show();
      }
      return this.cursor.update(this.page_x, this.page_y);
      /*
            @target.find("*:visible").filter((index) ->
              return if that.cursor.equal(this)
              return if not that.cursor.hit(this)
              console.log "hit"
            )
      */

    };

    Fude.prototype.is_out = function() {
      var height, width, x, y;
      x = this.target.offset().left;
      y = this.target.offset().top;
      width = this.target.width();
      height = this.target.height();
      if (this.page_x < x || this.page_x > x + width) {
        return true;
      }
      if (this.page_y < y || this.page_y > y + height) {
        return true;
      }
      return false;
    };

    return Fude;

  })();
  return $.fn.fude = function(option) {
    return new Fude($(this), option);
  };
});
